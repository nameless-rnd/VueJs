<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<testsuite name="com.cpe.backend.CustomerTest" tests="22" skipped="0" failures="0" errors="0" timestamp="2020-02-07T13:21:59" hostname="DESKTOP-O8394IJ" time="0.565">
  <properties/>
  <testcase name="B6015107_testTelMustNotBe9Digits()" classname="com.cpe.backend.CustomerTest" time="0.027"/>
  <testcase name="B6015107_testDateMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.024"/>
  <testcase name="B6015107_testAgeMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.023"/>
  <testcase name="B6015107_testCard_numMustNotDigits()" classname="com.cpe.backend.CustomerTest" time="0.034"/>
  <testcase name="B6015107_testAddressMustMatch()" classname="com.cpe.backend.CustomerTest" time="0.025"/>
  <testcase name="B6015107_testCard_numMustNotBe14Digits()" classname="com.cpe.backend.CustomerTest" time="0.024"/>
  <testcase name="B6015107_testCustomerOK()" classname="com.cpe.backend.CustomerTest" time="0.027"/>
  <testcase name="testCard_numMustBeUnique()" classname="com.cpe.backend.CustomerTest" time="0.026"/>
  <testcase name="B6015107_testAddressMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.025"/>
  <testcase name="B6015107_testTelMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.023"/>
  <testcase name="B6015107_testTelMustNotDigits()" classname="com.cpe.backend.CustomerTest" time="0.023"/>
  <testcase name="B6015107_test_createdByMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.018"/>
  <testcase name="B6015107_testNameMustMatchString()" classname="com.cpe.backend.CustomerTest" time="0.024"/>
  <testcase name="B6015107_testTelMustNotBe11Digits()" classname="com.cpe.backend.CustomerTest" time="0.021"/>
  <testcase name="B6015107_test_typeMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.024"/>
  <testcase name="B6015107_testNameMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.021"/>
  <testcase name="B6015107_testAgeMustBeLessThan70()" classname="com.cpe.backend.CustomerTest" time="0.024"/>
  <testcase name="B6015107_testAgeMustBeGreaterThan20()" classname="com.cpe.backend.CustomerTest" time="0.022"/>
  <testcase name="B6015107_testNameMustBeMore30String()" classname="com.cpe.backend.CustomerTest" time="0.027"/>
  <testcase name="B6015107_testCard_NumMustNotBe12Digits()" classname="com.cpe.backend.CustomerTest" time="0.027"/>
  <testcase name="B6015107_test_workMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.029"/>
  <testcase name="B6015107_testCard_NumMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.025"/>
  <system-out><![CDATA[2020-02-07 20:21:59.230  INFO 2800 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.cpe.backend.CustomerTest], using SpringBootContextLoader
2020-02-07 20:21:59.231  INFO 2800 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.cpe.backend.CustomerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-02-07 20:21:59.231  INFO 2800 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.cpe.backend.CustomerTest]: CustomerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-02-07 20:21:59.233  INFO 2800 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.cpe.backend.BackendApplication for test class com.cpe.backend.CustomerTest
2020-02-07 20:21:59.234  INFO 2800 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-02-07 20:21:59.234  INFO 2800 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6eb6efa5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327107f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7cbae05a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@75a1268f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2c332459, org.springframework.test.context.transaction.TransactionalTestExecutionListener@47fc6d48, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6c6feddd, org.springframework.test.context.event.EventPublishingTestExecutionListener@10862b81, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2522d424, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1107be5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@12027f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@33f984fd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@c9f552]
2020-02-07 20:21:59.239  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@60dc98ad, testMethod = B6015107_testTelMustNotBe9Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.265  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@60dc98ad, testMethod = B6015107_testTelMustNotBe9Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.268  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@66be2867, testMethod = B6015107_testDateMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.290  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@66be2867, testMethod = B6015107_testDateMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.293  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@7aa5bf2b, testMethod = B6015107_testAgeMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.315  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@7aa5bf2b, testMethod = B6015107_testAgeMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.318  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@b968a2, testMethod = B6015107_testCard_numMustNotDigits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.350  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@b968a2, testMethod = B6015107_testCard_numMustNotDigits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.353  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@11778101, testMethod = B6015107_testAddressMustMatch@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.377  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@11778101, testMethod = B6015107_testAddressMustMatch@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.379  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@31f3e047, testMethod = B6015107_testCard_numMustNotBe14Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.401  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@31f3e047, testMethod = B6015107_testCard_numMustNotBe14Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.404  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@3822333f, testMethod = B6015107_testCustomerOK@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
Hibernate: insert into customer (address, age, card_num, employee, date, name, tel, registype, job, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-02-07 20:21:59.430  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@3822333f, testMethod = B6015107_testCustomerOK@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.433  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@19e1ec4b, testMethod = testCard_numMustBeUnique@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
Hibernate: insert into customer (address, age, card_num, employee, date, name, tel, registype, job, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into customer (address, age, card_num, employee, date, name, tel, registype, job, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-02-07 20:21:59.453  WARN 2800 --- [    Test worker] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23505, SQLState: 23505
2020-02-07 20:21:59.453 ERROR 2800 --- [    Test worker] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unique index or primary key violation: "PUBLIC.UKPWW92AU927O7F8YCX2F4I1NLB_INDEX_5 ON PUBLIC.CUSTOMER(CARD_NUM) VALUES 3"; SQL statement:
insert into customer (address, age, card_num, employee, date, name, tel, registype, job, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [23505-200]
2020-02-07 20:21:59.457  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@19e1ec4b, testMethod = testCard_numMustBeUnique@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.460  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@2661fa22, testMethod = B6015107_testAddressMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.483  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@2661fa22, testMethod = B6015107_testAddressMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.485  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@1c8f44a6, testMethod = B6015107_testTelMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.508  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@1c8f44a6, testMethod = B6015107_testTelMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.510  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@1c703dd8, testMethod = B6015107_testTelMustNotDigits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.531  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@1c703dd8, testMethod = B6015107_testTelMustNotDigits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.534  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@d60f4f, testMethod = B6015107_test_createdByMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.550  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@d60f4f, testMethod = B6015107_test_createdByMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.553  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@7e4daaea, testMethod = B6015107_testNameMustMatchString@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.575  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@7e4daaea, testMethod = B6015107_testNameMustMatchString@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.577  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@6d71e018, testMethod = B6015107_testTelMustNotBe11Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.597  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@6d71e018, testMethod = B6015107_testTelMustNotBe11Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.598  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@74b8abb8, testMethod = B6015107_test_typeMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
2020-02-07 20:21:59.622  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@74b8abb8, testMethod = B6015107_test_typeMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.624  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@569fa01e, testMethod = B6015107_testNameMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.642  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@569fa01e, testMethod = B6015107_testNameMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.644  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@68936959, testMethod = B6015107_testAgeMustBeLessThan70@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.668  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@68936959, testMethod = B6015107_testAgeMustBeLessThan70@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.671  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@11a063fb, testMethod = B6015107_testAgeMustBeGreaterThan20@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.691  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@11a063fb, testMethod = B6015107_testAgeMustBeGreaterThan20@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.694  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@6461fd73, testMethod = B6015107_testNameMustBeMore30String@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.719  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@6461fd73, testMethod = B6015107_testNameMustBeMore30String@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.721  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@631d178f, testMethod = B6015107_testCard_NumMustNotBe12Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.748  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@631d178f, testMethod = B6015107_testCard_NumMustNotBe12Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.750  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@3e3a60a3, testMethod = B6015107_test_workMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.777  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@3e3a60a3, testMethod = B6015107_test_workMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:21:59.779  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@5d0ea3ce, testMethod = B6015107_testCard_NumMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@3d7aadbd]; rollback [true]
Hibernate: select job0_.job_id as job_id1_8_0_, job0_.job as job2_8_0_, cus1_.job_job_id as job_job_1_9_1_, customer2_.customer_id as cus_cust2_9_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, cus5_.regis_type_regis_type_id as regis_ty1_24_5_, customer6_.customer_id as cus_cust2_24_5_, customer6_.customer_id as customer1_5_6_, customer6_.address as address2_5_6_, customer6_.age as age3_5_6_, customer6_.card_num as card_num4_5_6_, customer6_.employee as employee8_5_6_, customer6_.date as date5_5_6_, customer6_.name as name6_5_6_, customer6_.tel as tel7_5_6_, customer6_.registype as registyp9_5_6_, customer6_.job as job10_5_6_, job7_.job_id as job_id1_8_7_, job7_.job as job2_8_7_ from job job0_ left outer join job_cus cus1_ on job0_.job_id=cus1_.job_job_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join resgistype_cus cus5_ on registype4_.regis_type_id=cus5_.regis_type_regis_type_id left outer join customer customer6_ on cus5_.cus_customer_id=customer6_.customer_id left outer join job job7_ on customer6_.job=job7_.job_id where job0_.job_id=?
Hibernate: select employee0_.employee_id as employee1_6_0_, employee0_.name as name2_6_0_, employee0_.password as password3_6_0_, employee0_.username as username4_6_0_ from employee employee0_ where employee0_.employee_id=?
Hibernate: select rent0_.employee_employee_id as employee1_7_0_, rent0_.rent_rent_car_id as rent_ren2_7_0_, rentcar1_.rent_car_id as rent_car1_18_1_, rentcar1_.employee_id as employee5_18_1_, rentcar1_.price as price2_18_1_, rentcar1_.rent_date as rent_dat3_18_1_, rentcar1_.customer_id as customer6_18_1_, rentcar1_.rentday as rentday4_18_1_, rentcar1_.car_id as car_id7_18_1_, rentcar1_.renttype_id as renttype8_18_1_, employee2_.employee_id as employee1_6_2_, employee2_.name as name2_6_2_, employee2_.password as password3_6_2_, employee2_.username as username4_6_2_, customer3_.customer_id as customer1_5_3_, customer3_.address as address2_5_3_, customer3_.age as age3_5_3_, customer3_.card_num as card_num4_5_3_, customer3_.employee as employee8_5_3_, customer3_.date as date5_5_3_, customer3_.name as name6_5_3_, customer3_.tel as tel7_5_3_, customer3_.registype as registyp9_5_3_, customer3_.job as job10_5_3_, employee4_.employee_id as employee1_6_4_, employee4_.name as name2_6_4_, employee4_.password as password3_6_4_, employee4_.username as username4_6_4_, registype5_.regis_type_id as regis_ty1_23_5_, registype5_.type as type2_23_5_, job6_.job_id as job_id1_8_6_, job6_.job as job2_8_6_, car7_.car_id as car_id1_2_7_, car7_.brand_id as brand_id4_2_7_, car7_.seat_id as seat_id5_2_7_, car7_.employee_id as employee6_2_7_, car7_.plate as plate2_2_7_, car7_.province_id as province7_2_7_, car7_.vin as vin3_2_7_, brand8_.brand_id as brand_id1_0_8_, brand8_.brand as brand2_0_8_, carseat9_.seat_id as seat_id1_3_9_, carseat9_.carseat as carseat2_3_9_, employee10_.employee_id as employee1_6_10_, employee10_.name as name2_6_10_, employee10_.password as password3_6_10_, employee10_.username as username4_6_10_, province11_.province_id as province1_16_11_, province11_.province as province2_16_11_, renttype12_.renttype_id as renttype1_19_12_, renttype12_.nametype as nametype2_19_12_, renttype12_.unitprice as unitpric3_19_12_ from employee_rent rent0_ inner join rent_car rentcar1_ on rent0_.rent_rent_car_id=rentcar1_.rent_car_id inner join employee employee2_ on rentcar1_.employee_id=employee2_.employee_id inner join customer customer3_ on rentcar1_.customer_id=customer3_.customer_id inner join employee employee4_ on customer3_.employee=employee4_.employee_id inner join resgistype registype5_ on customer3_.registype=registype5_.regis_type_id inner join job job6_ on customer3_.job=job6_.job_id inner join car car7_ on rentcar1_.car_id=car7_.car_id inner join brand brand8_ on car7_.brand_id=brand8_.brand_id inner join carseat carseat9_ on car7_.seat_id=carseat9_.seat_id inner join employee employee10_ on car7_.employee_id=employee10_.employee_id inner join plateprovince province11_ on car7_.province_id=province11_.province_id inner join renttype renttype12_ on rentcar1_.renttype_id=renttype12_.renttype_id where rent0_.employee_employee_id=?
Hibernate: select registype0_.regis_type_id as regis_ty1_23_0_, registype0_.type as type2_23_0_, cus1_.regis_type_regis_type_id as regis_ty1_24_1_, customer2_.customer_id as cus_cust2_24_1_, customer2_.customer_id as customer1_5_2_, customer2_.address as address2_5_2_, customer2_.age as age3_5_2_, customer2_.card_num as card_num4_5_2_, customer2_.employee as employee8_5_2_, customer2_.date as date5_5_2_, customer2_.name as name6_5_2_, customer2_.tel as tel7_5_2_, customer2_.registype as registyp9_5_2_, customer2_.job as job10_5_2_, employee3_.employee_id as employee1_6_3_, employee3_.name as name2_6_3_, employee3_.password as password3_6_3_, employee3_.username as username4_6_3_, registype4_.regis_type_id as regis_ty1_23_4_, registype4_.type as type2_23_4_, job5_.job_id as job_id1_8_5_, job5_.job as job2_8_5_, cus6_.job_job_id as job_job_1_9_6_, customer7_.customer_id as cus_cust2_9_6_, customer7_.customer_id as customer1_5_7_, customer7_.address as address2_5_7_, customer7_.age as age3_5_7_, customer7_.card_num as card_num4_5_7_, customer7_.employee as employee8_5_7_, customer7_.date as date5_5_7_, customer7_.name as name6_5_7_, customer7_.tel as tel7_5_7_, customer7_.registype as registyp9_5_7_, customer7_.job as job10_5_7_ from resgistype registype0_ left outer join resgistype_cus cus1_ on registype0_.regis_type_id=cus1_.regis_type_regis_type_id left outer join customer customer2_ on cus1_.cus_customer_id=customer2_.customer_id left outer join employee employee3_ on customer2_.employee=employee3_.employee_id left outer join resgistype registype4_ on customer2_.registype=registype4_.regis_type_id left outer join job job5_ on customer2_.job=job5_.job_id left outer join job_cus cus6_ on job5_.job_id=cus6_.job_job_id left outer join customer customer7_ on cus6_.cus_customer_id=customer7_.customer_id where registype0_.regis_type_id=?
2020-02-07 20:21:59.803  INFO 2800 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@693d83af testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@5d0ea3ce, testMethod = B6015107_testCard_NumMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@46f31ad6 testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@5bc6562a, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@642bc3bf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ec3a8b, [ImportsContextCustomizer@17214a36 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@61279f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20e296ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
=======
<testsuite name="com.cpe.backend.CustomerTest" tests="19" skipped="0" failures="0" errors="0" timestamp="2020-02-07T13:33:07" hostname="IceThammanitkit" time="0.446">
  <properties/>
  <testcase name="B6015107_testTelMustNotBe9Digits()" classname="com.cpe.backend.CustomerTest" time="0.024"/>
  <testcase name="B6015107_testDateMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.025"/>
  <testcase name="B6015107_testAgeMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.027"/>
  <testcase name="B6015107_testCard_numMustNotDigits()" classname="com.cpe.backend.CustomerTest" time="0.023"/>
  <testcase name="B6015107_testAddressMustMatch()" classname="com.cpe.backend.CustomerTest" time="0.02"/>
  <testcase name="B6015107_testCard_numMustNotBe14Digits()" classname="com.cpe.backend.CustomerTest" time="0.02"/>
  <testcase name="B6015107_testCustomerOK()" classname="com.cpe.backend.CustomerTest" time="0.024"/>
  <testcase name="testCard_numMustBeUnique()" classname="com.cpe.backend.CustomerTest" time="0.024"/>
  <testcase name="B6015107_testAddressMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.022"/>
  <testcase name="B6015107_testTelMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.023"/>
  <testcase name="B6015107_testTelMustNotDigits()" classname="com.cpe.backend.CustomerTest" time="0.017"/>
  <testcase name="B6015107_testNameMustMatchString()" classname="com.cpe.backend.CustomerTest" time="0.028"/>
  <testcase name="B6015107_testTelMustNotBe11Digits()" classname="com.cpe.backend.CustomerTest" time="0.021"/>
  <testcase name="B6015107_testNameMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.022"/>
  <testcase name="B6015107_testAgeMustBeLessThan70()" classname="com.cpe.backend.CustomerTest" time="0.021"/>
  <testcase name="B6015107_testAgeMustBeGreaterThan20()" classname="com.cpe.backend.CustomerTest" time="0.022"/>
  <testcase name="B6015107_testNameMustBeMore30String()" classname="com.cpe.backend.CustomerTest" time="0.023"/>
  <testcase name="B6015107_testCard_NumMustNotBe12Digits()" classname="com.cpe.backend.CustomerTest" time="0.019"/>
  <testcase name="B6015107_testCard_NumMustNotBeNull()" classname="com.cpe.backend.CustomerTest" time="0.02"/>
  <system-out><![CDATA[2020-02-07 20:33:07.163  INFO 13096 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.cpe.backend.CustomerTest], using SpringBootContextLoader
2020-02-07 20:33:07.164  INFO 13096 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.cpe.backend.CustomerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-02-07 20:33:07.165  INFO 13096 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.cpe.backend.CustomerTest]: CustomerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-02-07 20:33:07.171  INFO 13096 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.cpe.backend.BackendApplication for test class com.cpe.backend.CustomerTest
2020-02-07 20:33:07.171  INFO 13096 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-02-07 20:33:07.172  INFO 13096 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@d4915d5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@36db7b48, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@76eb2db3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5c4e6dc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@19ec3c22, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7480056c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5b2938fa, org.springframework.test.context.event.EventPublishingTestExecutionListener@74266629, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@c5349a3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@788c8620, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6a708f23, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2d20bb6a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3ba8f13c]
2020-02-07 20:33:07.177  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@1de0720c, testMethod = B6015107_testTelMustNotBe9Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.200  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@1de0720c, testMethod = B6015107_testTelMustNotBe9Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.203  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@482d2e01, testMethod = B6015107_testDateMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.225  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@482d2e01, testMethod = B6015107_testDateMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.229  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@5777d1b, testMethod = B6015107_testAgeMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.254  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@5777d1b, testMethod = B6015107_testAgeMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.257  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@7650bf04, testMethod = B6015107_testCard_numMustNotDigits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.278  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@7650bf04, testMethod = B6015107_testCard_numMustNotDigits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.282  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@371acaca, testMethod = B6015107_testAddressMustMatch@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.300  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@371acaca, testMethod = B6015107_testAddressMustMatch@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.302  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@e6ac1a1, testMethod = B6015107_testCard_numMustNotBe14Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.320  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@e6ac1a1, testMethod = B6015107_testCard_numMustNotBe14Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.323  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@4caeab00, testMethod = B6015107_testCustomerOK@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
Hibernate: insert into customer (address, age, card_num, employee, date, name, tel, registype, job, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-02-07 20:33:07.346  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@4caeab00, testMethod = B6015107_testCustomerOK@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.350  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@16073005, testMethod = testCard_numMustBeUnique@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
Hibernate: insert into customer (address, age, card_num, employee, date, name, tel, registype, job, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into customer (address, age, card_num, employee, date, name, tel, registype, job, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-02-07 20:33:07.366  WARN 13096 --- [    Test worker] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23505, SQLState: 23505
2020-02-07 20:33:07.366 ERROR 13096 --- [    Test worker] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unique index or primary key violation: "PUBLIC.UKPWW92AU927O7F8YCX2F4I1NLB_INDEX_5 ON PUBLIC.CUSTOMER(CARD_NUM) VALUES 3"; SQL statement:
insert into customer (address, age, card_num, employee, date, name, tel, registype, job, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [23505-200]
2020-02-07 20:33:07.370  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@16073005, testMethod = testCard_numMustBeUnique@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.373  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@43f607f5, testMethod = B6015107_testAddressMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.393  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@43f607f5, testMethod = B6015107_testAddressMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.396  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@1a8b3a6, testMethod = B6015107_testTelMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.417  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@1a8b3a6, testMethod = B6015107_testTelMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.420  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@47963c4a, testMethod = B6015107_testTelMustNotDigits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.436  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@47963c4a, testMethod = B6015107_testTelMustNotDigits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.439  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@2a16a33d, testMethod = B6015107_testNameMustMatchString@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.466  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@2a16a33d, testMethod = B6015107_testNameMustMatchString@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.468  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@34eebb4, testMethod = B6015107_testTelMustNotBe11Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.488  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@34eebb4, testMethod = B6015107_testTelMustNotBe11Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.491  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@6b6dc6c9, testMethod = B6015107_testNameMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.511  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@6b6dc6c9, testMethod = B6015107_testNameMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.514  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@7cb5160f, testMethod = B6015107_testAgeMustBeLessThan70@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.533  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@7cb5160f, testMethod = B6015107_testAgeMustBeLessThan70@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.537  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@44a04440, testMethod = B6015107_testAgeMustBeGreaterThan20@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.556  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@44a04440, testMethod = B6015107_testAgeMustBeGreaterThan20@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.560  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@6d6331dc, testMethod = B6015107_testNameMustBeMore30String@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.580  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@6d6331dc, testMethod = B6015107_testNameMustBeMore30String@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.583  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@43dff285, testMethod = B6015107_testCard_NumMustNotBe12Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.601  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@43dff285, testMethod = B6015107_testCard_NumMustNotBe12Digits@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-02-07 20:33:07.604  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@550a48e7, testMethod = B6015107_testCard_NumMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40685fd8]; rollback [true]
2020-02-07 20:33:07.621  INFO 13096 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@613d4e06 testClass = CustomerTest, testInstance = com.cpe.backend.CustomerTest@550a48e7, testMethod = B6015107_testCard_NumMustNotBeNull@CustomerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74ef22fa testClass = CustomerTest, locations = '{}', classes = '{class com.cpe.backend.BackendApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3eeea79c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e0a3e625, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@79272ef5, [ImportsContextCustomizer@4f87f85a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5fdc9645, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@25eb8b4c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
>>>>>>> issue-155
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
